@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime


<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>
<div class="row">
    <button class="btn btn-success m-2" style="width:200px;"  @onclick="ToastrSuccess">Toast Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="ToastrFailure">Toast Failure</button>
    <button class="btn btn-warning m-2" style="width:200px;" @onclick="ToastrWarning">Toast Warning</button>
</div>
<br/>
<div class="row">
    <button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failure</button>
 
</div>
@if(ConfirmResult)
{
    <p>Confirmation has been made!</p>
}
else
{
    <p>Confirmation pending!</p>
}
@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }
    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }
    private async Task ToastrSuccess() 
    {
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }
    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrError("Operation Failed");
    }
    private async Task ToastrWarning()
    {
        await _JsRuntime.InvokeVoidAsync("ShowToastr", "warning", "Warning");
    }


    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task complete");
    }
    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task fail");
    }
}
