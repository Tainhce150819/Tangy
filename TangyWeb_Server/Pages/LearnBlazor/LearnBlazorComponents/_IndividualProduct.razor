<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProduct(args, Product.Name)">
    <h4 class="text-secondary">Product -@Product.Id</h4>
    Add to Favorite <input type="checkbox" @onchange="FavoriteUpdated" /> <br /> <br />
    Name - @Product.Name <br />
    <p>RF From Parent - @FirstFragment @SecondFragment</p>
    Show Propertites :
    <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />
    @if (Product.IsActive)
    {
        @foreach (var item2 in Product.ProductProperty)
        {
            <p>@item2.Key - @item2.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="@Product.IsActive"></_EditDeleteButton>

</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnfavoriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> onLastSelectedProductChange { get; set; }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }
    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavoriteUpdated(Microsoft.AspNetCore.Components .ChangeEventArgs e)
    {
        await OnfavoriteUpdated.InvokeAsync((bool)e.Value);
    }
    private async Task LastSelectedProduct(MouseEventArgs e, string name)
    {
        await onLastSelectedProductChange.InvokeAsync(name);
    }
}
